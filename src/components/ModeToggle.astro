---
import { Card } from "@/components/ui/card";
import { Moon, Sun } from "lucide-react";

interface Props {
    grids: string;
}

const { grids } = Astro.props;
---

<script>
    (function () {
        const toggle = document.querySelector<HTMLElement>(
            "[data-theme-toggle]",
        );
        const root = document.documentElement;

        // Get initial theme - check localStorage first, then system preference
        const getInitialTheme = (): boolean => {
            const savedTheme = localStorage.getItem("theme");
            if (savedTheme) {
                return savedTheme === "dark";
            }
            // return window.matchMedia("(prefers-color-scheme: dark)").matches;
            // Default to dark theme
            return true;
        };

        let isDark = getInitialTheme();

        // Apply theme immediately to avoid flash
        updateTheme();

        // Toggle theme on click
        if (toggle) {
            toggle.addEventListener("click", () => {
                isDark = !isDark;
                updateTheme();
            });
        }

        // Sync with system theme changes
        const mediaQuery = window.matchMedia("(prefers-color-scheme: dark)");
        mediaQuery.addEventListener("change", (e) => {
            isDark = e.matches;
            updateTheme();
        });

        function updateTheme(): void {
            root.classList[isDark ? "add" : "remove"]("dark");
            localStorage.setItem("theme", isDark ? "dark" : "light");
        }
    })();
</script>

<Card
    data-theme-toggle
    className={`overflow-hidden hover:cursor-pointer hover:border-muted-foreground ${grids}`}
>
    <div
        class="flex flex-col justify-center items-center gap-4 p-6 md:p-0 h-full"
    >
        <span class="sr-only">Toggle theme</span>
        <div class="flex items-center">
            <Sun className="dark:hidden size-7" />
            <Moon className="dark:block hidden size-7" />
        </div>
    </div>
</Card>
