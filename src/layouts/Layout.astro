---
import "@/styles/globals.css";

interface Props {
	title: string;
}

const { title } = Astro.props;
---

<!doctype html>
<html lang="en">
	<head>
		<meta charset="UTF-8" />
		<meta name="viewport" content="width=device-width" />
		<meta name="theme-color" content="#09090b" />
		<link
			rel="icon"
			type="image/png"
			href="/favicon-96x96.png"
			sizes="96x96"
		/>
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		<link rel="shortcut icon" href="/favicon.ico" />
		<link
			rel="apple-touch-icon"
			sizes="180x180"
			href="/apple-touch-icon.png"
		/>
		<link rel="sitemap" href="/sitemap-index.xml" />
		<meta name="generator" content={Astro.generator} />
		<meta
			name="description"
			content="I'm a backend software developer based in Japan."
		/>
		<title>
			{title === "Tahir Murata" ? title : `${title} | Tahir Murata`}
		</title>
		<script is:inline>
			const root = document.documentElement;

			// Get initial theme - check localStorage first, then system preference
			const getInitialTheme = () => {
				const savedTheme = localStorage.getItem("theme");
				if (savedTheme) {
					return savedTheme === "dark";
				}
				return window.matchMedia("(prefers-color-scheme: dark)")
					.matches;
			};

			function updateTheme() {
				root.classList[isDark ? "add" : "remove"]("dark");
				localStorage.setItem("theme", isDark ? "dark" : "light");
				document
					.querySelector('meta[name="theme-color"]')
					.setAttribute("content", isDark ? "#09090b" : "#ffffff");
			}

			let isDark = getInitialTheme();

			// Apply theme immediately to avoid flash
			updateTheme();

			// Sync with system theme changes
			const mediaQuery = window.matchMedia(
				"(prefers-color-scheme: dark)",
			);
			mediaQuery.onchange = (e) => {
				isDark = e.matches;
				updateTheme();
			};

			// Wait for DOM content to be loaded
			document.addEventListener("DOMContentLoaded", () => {
				const toggle = document.querySelector("[data-theme-toggle]");

				// Toggle theme on click
				toggle.addEventListener("click", () => {
					isDark = !isDark;
					updateTheme();
				});
			});
		</script>
	</head>
	<body>
		<slot />
	</body>
</html>
