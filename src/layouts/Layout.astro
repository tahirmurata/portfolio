---
import "@/styles/globals.css";

interface Props {
	title: string;
}

const { title } = Astro.props;
---

<!doctype html>
<html lang="en">
	<head>
		<meta charset="UTF-8" />
		<meta
			name="description"
			content="I'm a developer based in Japan who likes Golang."
		/>
		<meta name="viewport" content="width=device-width" />
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		<meta name="generator" content={Astro.generator} />
		<title>
			{title === "Tahir Murata" ? title : `${title} | Tahir Murata`}
		</title>
	</head>
	<body>
		<slot />
	</body>
</html>

<script is:inline>
	(function () {
		const toggle = document.querySelector("[data-theme-toggle]");
		const root = document.documentElement;

		// Get initial theme - check localStorage first, then system preference
		const getInitialTheme = () => {
			const savedTheme = localStorage.getItem("theme");
			if (savedTheme) {
				return savedTheme === "dark";
			}
			return window.matchMedia("(prefers-color-scheme: dark)").matches;
		};

		let isDark = getInitialTheme();

		// Apply theme immediately to avoid flash
		updateTheme();

		// Toggle theme on click
		if (toggle) {
			toggle.addEventListener("click", () => {
				isDark = !isDark;
				updateTheme();
			});
		}

		// Sync with system theme changes
		const mediaQuery = window.matchMedia("(prefers-color-scheme: dark)");
		mediaQuery.addEventListener("change", (e) => {
			isDark = e.matches;
			updateTheme();
		});

		function updateTheme() {
			root.classList[isDark ? "add" : "remove"]("dark");
			localStorage.setItem("theme", isDark ? "dark" : "light");
		}
	})();
</script>
